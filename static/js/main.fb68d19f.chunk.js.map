{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","ws","useRef","containerRef","useState","price","setPrice","direction","setDirection","useEffect","current","WebSocket","window","matchMedia","matches","style","height","innerHeight","console","log","onopen","send","JSON","stringify","action","subs","onmessage","e","result","data","split","prev","onclose","className","ref","Number","toFixed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iKA6EeA,MAvEf,WACE,IAAMC,EAAKC,mBACLC,EAAeD,mBACrB,EAA0BE,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAoDA,OAnDAC,qBAAU,WACRR,EAAGS,QAAU,IAAIC,UAVT,uDAWSC,OAAOC,WAAW,sBAAsBC,UAEvDX,EAAaO,QAAQK,MAAMC,OAASJ,OAAOK,YAAc,QAE1D,IAEHR,qBAAU,WA+BR,OA9BIR,IACFiB,QAAQC,IAAIlB,GACZA,EAAGS,QAAQU,OAAS,WAClBnB,EAAGS,QAAQW,KACTC,KAAKC,UAAU,CACbC,OAAQ,SACRC,KAAM,CAAC,yBAUXxB,EAAGS,QAAQgB,UAAY,SAACC,GACtB,IAAMC,EAASD,EAAEE,KAAKC,MAAM,KACV,MAAdF,EAAO,IAA6B,MAAdA,EAAO,IAA4B,MAAdA,EAAO,IACpDtB,GAAS,SAACyB,GAIR,OAHIA,IACFA,EAAOH,EAAO,GAAKpB,EAAa,MAAQA,EAAa,SAEhDoB,EAAO,SAOjB,WACL3B,EAAGS,QAAQsB,QAAU,WACnB/B,EAAGS,QAAQW,KACTC,KAAKC,UAAU,CACbC,OAAQ,YACRC,KAAM,CAAC,6BAKd,CAACxB,IAGF,sBAAMgC,UAAU,YAAYC,IAAK/B,EAAjC,SACGE,GACC,oBACE4B,UAAS,gBACO,OAAd1B,EAAqB,KAAqB,SAAdA,EAAuB,OAAS,IAFhE,SAKG,KAAO4B,OAAO9B,GAAO+B,QAAQ,QC1DzBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.fb68d19f.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\nconst URL = \"wss://streamer.cryptocompare.com/v2?format=streamer\";\n\n// const URL = \"wss://stream.coinmarketcap.com/price/latest\";\n\nfunction App() {\n  const ws = useRef();\n  const containerRef = useRef();\n  const [price, setPrice] = useState(0);\n  const [direction, setDirection] = useState(\"\");\n  useEffect(() => {\n    ws.current = new WebSocket(URL);\n    const isDevice = window.matchMedia(\"(max-width: 580px)\").matches;\n    if (isDevice) {\n      containerRef.current.style.height = window.innerHeight + \"px\";\n    }\n  }, []);\n\n  useEffect(() => {\n    if (ws) {\n      console.log(ws);\n      ws.current.onopen = () => {\n        ws.current.send(\n          JSON.stringify({\n            action: \"SubAdd\",\n            subs: [\"2~Coinbase~BTC~USD\"],\n          })\n        );\n        // ws.send(\n        //   JSON.stringify({\n        //     method: \"subscribe\",\n        //     id: \"price\",\n        //     data: { cryptoIds: [1], index: null },\n        //   })\n        // );\n        ws.current.onmessage = (e) => {\n          const result = e.data.split(\"~\");\n          if (result[0] === \"2\" && (result[4] === \"1\" || result[4] === \"2\")) {\n            setPrice((prev) => {\n              if (prev) {\n                prev < result[5] ? setDirection(\"up\") : setDirection(\"down\");\n              }\n              return result[5];\n            });\n          }\n        };\n      };\n    }\n\n    return () => {\n      ws.current.onclose = () => {\n        ws.current.send(\n          JSON.stringify({\n            action: \"SubRemove\",\n            subs: [\"2~Coinbase~BTC~USD\"],\n          })\n        );\n      };\n    };\n  }, [ws]);\n\n  return (\n    <main className=\"container\" ref={containerRef}>\n      {price && (\n        <h1\n          className={`price ${\n            direction === \"up\" ? \"up\" : direction === \"down\" ? \"down\" : \"\"\n          }`}\n        >\n          {\"$ \" + Number(price).toFixed(2)}\n        </h1>\n      )}\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}