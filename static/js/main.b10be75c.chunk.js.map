{"version":3,"sources":["components/Chart.js","App.js","reportWebVitals.js","index.js"],"names":["lineSeries","volumeSeries","Chart","price","height","width","history","chartContainerRef","useRef","chart","useEffect","current","createChart","layout","backgroundColor","textColor","grid","vertLines","color","horzLines","crosshair","mode","CrosshairMode","Normal","priceScale","borderColor","timeScale","addCandlestickSeries","upColor","downColor","borderDownColor","borderUpColor","wickDownColor","wickUpColor","addHistogramSeries","priceFormat","type","priceScaleId","scaleMargins","top","bottom","remove","setData","volumeHistory","map","item","i","arr","time","value","volumeto","fitContent","length","close","volume","last","time_","Date","Number","toLocaleDateString","split","reverse","join","getTime","update","open","high","Math","max","low","min","ref","ticker","App","ws","containerRef","useState","setHistory","setPrice","direction","setDirection","WebSocket","window","matchMedia","matches","style","innerHeight","fetch","then","resp","json","data","Data","onopen","send","JSON","stringify","method","id","cryptoIds","index","onmessage","e","parse","prev","d","cr","p","t","pc24h","p24h","v","document","title","toFixed","onclose","className","toString","includes","clientHeight","clientWidth","innerWidth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"iIAGIA,EAAYC,E,6DA+FDC,MA1Ff,YAAmD,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,QAC/BC,EAAoBC,mBACpBC,EAAQD,mBAqFd,OApFAE,qBAAU,WA6CR,OA5CAD,EAAME,QAAUC,YAAYL,EAAkBI,QAAS,CACrDN,QACAD,SACAS,OAAQ,CACNC,gBAAiB,UACjBC,UAAW,4BAEbC,KAAM,CACJC,UAAW,CACTC,MAAO,WAETC,UAAW,CACTD,MAAO,YAGXE,UAAW,CACTC,KAAMC,IAAcC,QAEtBC,WAAY,CACVC,YAAa,WAEfC,UAAW,CACTD,YAAa,aAGjBzB,EAAaS,EAAME,QAAQgB,qBAAqB,CAC9CC,QAAS,UACTC,UAAW,UACXC,gBAAiB,UACjBC,cAAe,UACfC,cAAe,UACfC,YAAa,YAEfhC,EAAeQ,EAAME,QAAQuB,mBAAmB,CAC9ChB,MAAO,UACPiB,YAAa,CACXC,KAAM,UAERC,aAAc,GACdC,aAAc,CACZC,IAAK,GACLC,OAAQ,KAGL,WACL/B,EAAME,QAAQ8B,YAGf,IACH/B,qBAAU,WACRV,EAAW0C,QAAQpC,GACnB,IAAMqC,EAAgBrC,EAAQsC,KAAI,SAACC,EAAMC,EAAGC,GAAS,IAAD,EAGlD,MAAO,CACLC,KAAMH,EAAKG,KACXC,MAAOJ,EAAKK,SACZhC,OAAO,UAAA6B,EAAID,EAAI,UAAR,eAAYI,UAAWL,EAAKK,SAAW,YAAc,gBAGhEjD,EAAayC,QAAQC,GACrBlC,EAAME,QAAQe,YAAYyB,eACzB,CAAC7C,EAAQ8C,SACZ1C,qBAAU,WACR,GAAIV,GAAcG,EAAO,CAEvB,IAAQ6C,EAAwB7C,EAAxB6C,KAAMK,EAAkBlD,EAAlBkD,MAAOC,EAAWnD,EAAXmD,OACfC,EAAOjD,EAAQA,EAAQ8C,OAAS,GAChCI,EA3EI,SAACR,GAAD,OACd,IAAIS,KAAKC,OAAOV,IAAOW,qBAAqBC,MAAM,KAAKC,UAAUC,KAAK,KA0EpDC,CAAQf,GACtBhD,EAAWgE,OAAO,CAChBhB,KAAMQ,EACNS,KAAMV,EAAKU,KACXC,KAAMC,KAAKC,IAAIb,EAAKW,KAAMb,GAC1BgB,IAAKF,KAAKG,IAAIf,EAAKc,IAAKhB,GACxBA,UAEFpD,EAAa+D,OAAO,CAClBhB,KAAMQ,EACNP,MAAOK,OAGV,CAACnD,EAAOH,IAEJ,qBAAKuE,IAAKhE,KCzFbiE,EAAS,UAkJAC,MA/If,WAAgB,IAAD,IACPC,EAAKlE,mBACLmE,EAAenE,mBACrB,EAA8BoE,mBAAS,IAAvC,mBAAOtE,EAAP,KAAgBuE,EAAhB,KACA,EAA0BD,qBAA1B,mBAAOzE,EAAP,KAAc2E,EAAd,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KA0FA,OAxFAtE,qBAAU,WACRgE,EAAG/D,QAAU,IAAIsE,UAZT,+CAaSC,OAAOC,WAAW,sBAAsBC,UAEvDT,EAAahE,QAAQ0E,MAAMjF,OAAS8E,OAAOI,YAAc,QAE1D,IAEH5E,qBAAU,WACR6E,MAjBF,iFAkBKC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GACLd,EAAWc,EAAKC,KAAKA,WAExB,IAEHlF,qBAAU,WA2DR,OA1DIgE,IACFA,EAAG/D,QAAQkF,OAAS,WAOlBnB,EAAG/D,QAAQmF,KACTC,KAAKC,UAAU,CACbC,OAAQ,YACRC,GAAI,QACJP,KAAM,CAAEQ,UAAW,CAAC,GAAIC,MAAO,aAGnC1B,EAAG/D,QAAQ0F,UAAY,SAACC,GAsBtB,IAAMX,EAAOI,KAAKQ,MAAMD,EAAEX,MACtBA,IACFb,GAAS,SAAC0B,GAMR,OALIA,IACFA,EAAKnD,MAAQsC,EAAKc,EAAEC,GAAGC,EACnB3B,EAAa,MACbA,EAAa,SAEZ,CACLhC,KAAM2C,EAAKc,EAAEG,EACbvD,MAAOsC,EAAKc,EAAEC,GAAGC,EACjBE,MAAOlB,EAAKc,EAAEC,GAAGI,KACjBxD,OAAQqC,EAAKc,EAAEC,GAAGK,MAGtBC,SAASC,MAAQzC,aAAiBd,OAAOiC,EAAKc,EAAEC,GAAGC,GAAGO,QAAQ,OAM/D,WACLxC,EAAG/D,QAAQwG,QAAU,WACnBzC,EAAG/D,QAAQmF,KACTC,KAAKC,UAAU,CACbC,OAAQ,cACRC,GAAI,QACJP,KAAM,CAAEQ,UAAW,CAAC,GAAIC,MAAO,iBAKtC,CAAC1B,IAGF,uBAAM0C,UAAU,YAAY7C,IAAKI,EAAjC,WACQ,OAALxE,QAAK,IAALA,OAAA,EAAAA,EAAOkD,QACN,sBAAK+D,UAAU,QAAf,UACE,qBAAIA,UAAU,SAAd,UACG5C,GACK,OAALrE,QAAK,IAALA,OAAA,EAAAA,EAAO0G,QACN,wBACEO,UAAS,iCAEPjH,EAAM0G,MAAMQ,WAAWC,SAAS,KAC5B,OACAnH,EAAM0G,MAAMQ,WAAWC,SAAS,KAChC,KACA,GANG,sBADX,UAWG5D,OAAOvD,EAAM0G,OAAOK,QAAQ,GAX/B,UAeJ,oBACEE,UAAS,gBACO,OAAdrC,EAAqB,KAAqB,SAAdA,EAAuB,OAAS,IAFhE,SAKG,KAAOrB,OAAOvD,EAAMkD,OAAO6D,QAAQ,KAEtC,qBAAKE,UAAU,YAAf,UACQ,OAALjH,QAAK,IAALA,OAAA,EAAAA,EAAOmD,SACN,wBAAO8D,UAAU,QAAjB,kBACQ1D,OAAOvD,EAAMmD,QAAQ4D,QAAQ,WAM7C,cAAC,EAAD,CACE/G,MAAOA,EACPC,QAAoB,OAAZuE,QAAY,IAAZA,GAAA,UAAAA,EAAchE,eAAd,eAAuB4G,eAAgBrC,OAAOI,YACtDjF,OAAmB,OAAZsE,QAAY,IAAZA,GAAA,UAAAA,EAAchE,eAAd,eAAuB6G,cAAetC,OAAOuC,WACpDnH,QAASA,QCtIFoH,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpC,MAAK,YAAkD,IAA/CqC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASqB,eAAe,SAM1BX,M","file":"static/js/main.b10be75c.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { createChart, CrosshairMode } from \"lightweight-charts\";\n\nlet lineSeries, volumeSeries;\n\nconst getTime = (time) =>\n  new Date(Number(time)).toLocaleDateString().split(\"/\").reverse().join(\"-\");\n\nfunction Chart({ price, height, width, history }) {\n  const chartContainerRef = useRef();\n  const chart = useRef();\n  useEffect(() => {\n    chart.current = createChart(chartContainerRef.current, {\n      width,\n      height,\n      layout: {\n        backgroundColor: \"#253248\",\n        textColor: \"rgba(255, 255, 255, 0.9)\",\n      },\n      grid: {\n        vertLines: {\n          color: \"#334158\",\n        },\n        horzLines: {\n          color: \"#334158\",\n        },\n      },\n      crosshair: {\n        mode: CrosshairMode.Normal,\n      },\n      priceScale: {\n        borderColor: \"#485c7b\",\n      },\n      timeScale: {\n        borderColor: \"#485c7b\",\n      },\n    });\n    lineSeries = chart.current.addCandlestickSeries({\n      upColor: \"#4bffb5\",\n      downColor: \"#ff4976\",\n      borderDownColor: \"#ff4976\",\n      borderUpColor: \"#4bffb5\",\n      wickDownColor: \"#838ca1\",\n      wickUpColor: \"#838ca1\",\n    });\n    volumeSeries = chart.current.addHistogramSeries({\n      color: \"#26a69a\",\n      priceFormat: {\n        type: \"volume\",\n      },\n      priceScaleId: \"\",\n      scaleMargins: {\n        top: 0.8,\n        bottom: 0,\n      },\n    });\n    return () => {\n      chart.current.remove();\n      //\n    };\n  }, []);\n  useEffect(() => {\n    lineSeries.setData(history);\n    const volumeHistory = history.map((item, i, arr) => {\n      //       upColor: \"#4bffb5\",\n      // downColor: \"#ff4976\",\n      return {\n        time: item.time,\n        value: item.volumeto,\n        color: arr[i + 1]?.volumeto < item.volumeto ? \"#009688cc\" : \"#ff5252cc\",\n      };\n    });\n    volumeSeries.setData(volumeHistory);\n    chart.current.timeScale().fitContent();\n  }, [history.length]);\n  useEffect(() => {\n    if (lineSeries && price) {\n      // const { time, open, high, low, close } = price;\n      const { time, close, volume } = price;\n      const last = history[history.length - 1];\n      const time_ = getTime(time);\n      lineSeries.update({\n        time: time_,\n        open: last.open,\n        high: Math.max(last.high, close),\n        low: Math.min(last.low, close),\n        close,\n      });\n      volumeSeries.update({\n        time: time_,\n        value: volume,\n      });\n    }\n  }, [price, lineSeries]);\n\n  return <div ref={chartContainerRef}></div>;\n}\n\nexport default Chart;\n","import { useEffect, useRef, useState } from \"react\";\nimport Chart from \"./components/Chart\";\n\n// const URL = \"wss://streamer.cryptocompare.com/v2?format=streamer\";\n\nconst URL = \"wss://stream.coinmarketcap.com/price/latest\";\nconst ticker = \"BTC-USD\";\nconst API_URL =\n  \"https://min-api.cryptocompare.com/data/v2/histoday?fsym=BTC&tsym=USD&limit=60\";\nfunction App() {\n  const ws = useRef();\n  const containerRef = useRef();\n  const [history, setHistory] = useState([]);\n  const [price, setPrice] = useState();\n  const [direction, setDirection] = useState(\"\");\n  // const [ticker, setTicker] = useState(\"\");\n  useEffect(() => {\n    ws.current = new WebSocket(URL);\n    const isDevice = window.matchMedia(\"(max-width: 580px)\").matches;\n    if (isDevice) {\n      containerRef.current.style.height = window.innerHeight + \"px\";\n    }\n  }, []);\n\n  useEffect(() => {\n    fetch(API_URL)\n      .then((resp) => resp.json())\n      .then((data) => {\n        setHistory(data.Data.Data);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (ws) {\n      ws.current.onopen = () => {\n        // ws.current.send(\n        //   JSON.stringify({\n        //     action: \"SubAdd\",\n        //     subs: [\"24~CCCAGG~BTC~USD~m\"],\n        //   })\n        // );\n        ws.current.send(\n          JSON.stringify({\n            method: \"subscribe\",\n            id: \"price\",\n            data: { cryptoIds: [1], index: \"detail\" },\n          })\n        );\n        ws.current.onmessage = (e) => {\n          // const result = e.data.split(\"~\");\n          // if (result[0] === \"2\" && (result[4] === \"1\" || result[4] === \"2\"))\n          // if (result[0] === \"24\") {\n          //   setPrice((prev) => {\n          //     if (prev) {\n          //       prev < result[10] ? setDirection(\"up\") : setDirection(\"down\");\n          //     }\n          //     return {\n          //       time: result[4],\n          //       open: result[7],\n          //       high: result[8],\n          //       low: result[9],\n          //       close: result[10],\n          //     };\n          //   });\n          //   if (!ticker) {\n          //     setTicker(result[2] + \"/\" + result[3]);\n          //   }\n          //   document.title = result[2] + \"-\" + result[3] + \" | \" + result[10];\n          // }\n\n          const data = JSON.parse(e.data);\n          if (data) {\n            setPrice((prev) => {\n              if (prev) {\n                prev.close < data.d.cr.p\n                  ? setDirection(\"up\")\n                  : setDirection(\"down\");\n              }\n              return {\n                time: data.d.t,\n                close: data.d.cr.p,\n                pc24h: data.d.cr.p24h,\n                volume: data.d.cr.v,\n              };\n            });\n            document.title = ticker + \" | \" + Number(data.d.cr.p).toFixed(2);\n          }\n        };\n      };\n    }\n\n    return () => {\n      ws.current.onclose = () => {\n        ws.current.send(\n          JSON.stringify({\n            method: \"unsubscribe\",\n            id: \"price\",\n            data: { cryptoIds: [1], index: \"detail\" },\n          })\n        );\n      };\n    };\n  }, [ws]);\n\n  return (\n    <main className=\"container\" ref={containerRef}>\n      {price?.close && (\n        <div className=\"block\">\n          <h4 className=\"ticker\">\n            {ticker}\n            {price?.pc24h && (\n              <small\n                className={`badge\n                ${\n                  price.pc24h.toString().includes(\"-\")\n                    ? \"down\"\n                    : price.pc24h.toString().includes(\"+\")\n                    ? \"up\"\n                    : \"\"\n                }\n                `}\n              >\n                {Number(price.pc24h).toFixed(2)}%\n              </small>\n            )}\n          </h4>\n          <h2\n            className={`price ${\n              direction === \"up\" ? \"up\" : direction === \"down\" ? \"down\" : \"\"\n            }`}\n          >\n            {\"$ \" + Number(price.close).toFixed(2)}\n          </h2>\n          <div className=\"label-row\">\n            {price?.volume && (\n              <small className=\"badge\">\n                Vol: {Number(price.volume).toFixed(2)}\n              </small>\n            )}\n          </div>\n        </div>\n      )}\n      <Chart\n        price={price}\n        height={containerRef?.current?.clientHeight || window.innerHeight}\n        width={containerRef?.current?.clientWidth || window.innerWidth}\n        history={history}\n      />\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}