{"version":3,"sources":["components/Chart.js","App.js","reportWebVitals.js","index.js"],"names":["lineSeries","Chart","price","height","width","useState","data","setData","chartContainerRef","useRef","chart","useEffect","fetch","then","resp","json","Data","current","createChart","layout","backgroundColor","textColor","grid","vertLines","color","horzLines","crosshair","mode","CrosshairMode","Normal","priceScale","borderColor","timeScale","addCandlestickSeries","upColor","downColor","borderDownColor","borderUpColor","wickDownColor","wickUpColor","remove","fitContent","time","close","last","length","time_","Date","Number","toLocaleDateString","split","reverse","join","update","open","high","Math","max","low","min","ref","ticker","App","ws","containerRef","setPrice","direction","setDirection","WebSocket","window","matchMedia","matches","style","innerHeight","onopen","send","JSON","stringify","method","id","cryptoIds","index","onmessage","e","parse","prev","d","cr","p","t","pc24h","p24h","document","title","onclose","action","subs","className","toString","includes","toFixed","clientHeight","clientWidth","innerWidth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"iIAGIA,E,6DA4EWC,MAzEf,YAA0C,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,MAC9B,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAoBC,mBACpBC,EAAQD,mBAmEd,OAlEAE,qBAAU,WAqCR,OApCAC,MANF,iFAOKC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACP,GAAD,OAAUC,EAAQD,EAAKU,KAAKA,SACpCN,EAAMO,QAAUC,YAAYV,EAAkBS,QAAS,CACrDb,QACAD,SACAgB,OAAQ,CACNC,gBAAiB,UACjBC,UAAW,4BAEbC,KAAM,CACJC,UAAW,CACTC,MAAO,WAETC,UAAW,CACTD,MAAO,YAGXE,UAAW,CACTC,KAAMC,IAAcC,QAEtBC,WAAY,CACVC,YAAa,WAEfC,UAAW,CACTD,YAAa,aAGjB/B,EAAaU,EAAMO,QAAQgB,qBAAqB,CAC9CC,QAAS,UACTC,UAAW,UACXC,gBAAiB,UACjBC,cAAe,UACfC,cAAe,UACfC,YAAa,YAER,WACL7B,EAAMO,QAAQuB,YAGf,IACH7B,qBAAU,WACRX,EAAWO,QAAQD,GACnBI,EAAMO,QAAQe,YAAYS,eACzB,CAACnC,IACJK,qBAAU,WACR,GAAIX,GAAcE,EAAO,CAEvB,IAAQwC,EAAgBxC,EAAhBwC,KAAMC,EAAUzC,EAAVyC,MACRC,EAAOtC,EAAKA,EAAKuC,OAAS,GAC1BC,EAAQ,IAAIC,KAAKC,OAAON,IAC3BO,qBACAC,MAAM,KACNC,UACAC,KAAK,KACRpD,EAAWqD,OAAO,CAChBX,KAAMI,EACNQ,KAAMV,EAAKU,KACXC,KAAMC,KAAKC,IAAIb,EAAKW,KAAMZ,GAC1Be,IAAKF,KAAKG,IAAIf,EAAKc,IAAKf,GACxBA,aAGH,CAACzC,EAAOF,IAEJ,qBAAK4D,IAAKpD,KCtEbqD,EAAS,UA6HAC,MA5Hf,WAAgB,IAAD,IACPC,EAAKtD,mBACLuD,EAAevD,mBACrB,EAA0BJ,qBAA1B,mBAAOH,EAAP,KAAc+D,EAAd,KACA,EAAkC5D,mBAAS,IAA3C,mBAAO6D,EAAP,KAAkBC,EAAlB,KAgFA,OA9EAxD,qBAAU,WACRoD,EAAG9C,QAAU,IAAImD,UATT,+CAUSC,OAAOC,WAAW,sBAAsBC,UAEvDP,EAAa/C,QAAQuD,MAAMrE,OAASkE,OAAOI,YAAc,QAE1D,IAEH9D,qBAAU,WA0DR,OAzDIoD,IACFA,EAAG9C,QAAQyD,OAAS,WAOlBX,EAAG9C,QAAQ0D,KACTC,KAAKC,UAAU,CACbC,OAAQ,YACRC,GAAI,QACJzE,KAAM,CAAE0E,UAAW,CAAC,GAAIC,MAAO,aAGnClB,EAAG9C,QAAQiE,UAAY,SAACC,GAsBtB,IAAM7E,EAAOsE,KAAKQ,MAAMD,EAAE7E,MACtBA,IACF2D,GAAS,SAACoB,GAMR,OALIA,IACFA,EAAK1C,MAAQrC,EAAKgF,EAAEC,GAAGC,EACnBrB,EAAa,MACbA,EAAa,SAEZ,CACLzB,KAAMpC,EAAKgF,EAAEG,EACb9C,MAAOrC,EAAKgF,EAAEC,GAAGC,EACjBE,MAAOpF,EAAKgF,EAAEC,GAAGI,SAGrBC,SAASC,MAAQhC,aAAiBvD,EAAKgF,EAAEC,GAAGC,MAM7C,WACLzB,EAAG9C,QAAQ6E,QAAU,WACnB/B,EAAG9C,QAAQ0D,KACTC,KAAKC,UAAU,CACbkB,OAAQ,YACRC,KAAM,CAAC,8BAKd,CAACjC,IAGF,uBAAMkC,UAAU,YAAYrC,IAAKI,EAAjC,WACQ,OAAL9D,QAAK,IAALA,OAAA,EAAAA,EAAOyC,QACN,sBAAKsD,UAAU,QAAf,UACE,qBAAIA,UAAU,SAAd,UACGpC,GACK,OAAL3D,QAAK,IAALA,OAAA,EAAAA,EAAOwF,QACN,wBACEO,UAAS,iCAEP/F,EAAMwF,MAAMQ,WAAWC,SAAS,KAC5B,OACAjG,EAAMwF,MAAMQ,WAAWC,SAAS,KAChC,KACA,GANG,sBADX,UAWGnD,OAAO9C,EAAMwF,OAAOU,QAAQ,GAX/B,UAeJ,oBACEH,UAAS,gBACO,OAAd/B,EAAqB,KAAqB,SAAdA,EAAuB,OAAS,IAFhE,SAKG,KAAOlB,OAAO9C,EAAMyC,OAAOyD,QAAQ,QAI1C,cAAC,EAAD,CACElG,MAAOA,EACPC,QAAoB,OAAZ6D,QAAY,IAAZA,GAAA,UAAAA,EAAc/C,eAAd,eAAuBoF,eAAgBhC,OAAOI,YACtDrE,OAAmB,OAAZ4D,QAAY,IAAZA,GAAA,UAAAA,EAAc/C,eAAd,eAAuBqF,cAAejC,OAAOkC,iBCjH7CC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7F,MAAK,YAAkD,IAA/C8F,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtB,SAASuB,eAAe,SAM1BX,M","file":"static/js/main.4ba473d9.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { createChart, CrosshairMode } from \"lightweight-charts\";\n\nlet lineSeries;\nconst API_URL =\n  \"https://min-api.cryptocompare.com/data/v2/histoday?fsym=BTC&tsym=USD&limit=40\";\nfunction Chart({ price, height, width }) {\n  const [data, setData] = useState([]);\n  const chartContainerRef = useRef();\n  const chart = useRef();\n  useEffect(() => {\n    fetch(API_URL)\n      .then((resp) => resp.json())\n      .then((data) => setData(data.Data.Data));\n    chart.current = createChart(chartContainerRef.current, {\n      width,\n      height,\n      layout: {\n        backgroundColor: \"#253248\",\n        textColor: \"rgba(255, 255, 255, 0.9)\",\n      },\n      grid: {\n        vertLines: {\n          color: \"#334158\",\n        },\n        horzLines: {\n          color: \"#334158\",\n        },\n      },\n      crosshair: {\n        mode: CrosshairMode.Normal,\n      },\n      priceScale: {\n        borderColor: \"#485c7b\",\n      },\n      timeScale: {\n        borderColor: \"#485c7b\",\n      },\n    });\n    lineSeries = chart.current.addCandlestickSeries({\n      upColor: \"#4bffb5\",\n      downColor: \"#ff4976\",\n      borderDownColor: \"#ff4976\",\n      borderUpColor: \"#4bffb5\",\n      wickDownColor: \"#838ca1\",\n      wickUpColor: \"#838ca1\",\n    });\n    return () => {\n      chart.current.remove();\n      //\n    };\n  }, []);\n  useEffect(() => {\n    lineSeries.setData(data);\n    chart.current.timeScale().fitContent();\n  }, [data]);\n  useEffect(() => {\n    if (lineSeries && price) {\n      // const { time, open, high, low, close } = price;\n      const { time, close } = price;\n      const last = data[data.length - 1];\n      const time_ = new Date(Number(time))\n        .toLocaleDateString()\n        .split(\"/\")\n        .reverse()\n        .join(\"-\");\n      lineSeries.update({\n        time: time_,\n        open: last.open,\n        high: Math.max(last.high, close),\n        low: Math.min(last.low, close),\n        close,\n      });\n    }\n  }, [price, lineSeries]);\n\n  return <div ref={chartContainerRef}></div>;\n}\n\nexport default Chart;\n","import { useEffect, useRef, useState } from \"react\";\nimport Chart from \"./components/Chart\";\n\n// const URL = \"wss://streamer.cryptocompare.com/v2?format=streamer\";\n\nconst URL = \"wss://stream.coinmarketcap.com/price/latest\";\nconst ticker = \"BTC-USD\";\nfunction App() {\n  const ws = useRef();\n  const containerRef = useRef();\n  const [price, setPrice] = useState();\n  const [direction, setDirection] = useState(\"\");\n  // const [ticker, setTicker] = useState(\"\");\n  useEffect(() => {\n    ws.current = new WebSocket(URL);\n    const isDevice = window.matchMedia(\"(max-width: 580px)\").matches;\n    if (isDevice) {\n      containerRef.current.style.height = window.innerHeight + \"px\";\n    }\n  }, []);\n\n  useEffect(() => {\n    if (ws) {\n      ws.current.onopen = () => {\n        // ws.current.send(\n        //   JSON.stringify({\n        //     action: \"SubAdd\",\n        //     subs: [\"24~CCCAGG~BTC~USD~m\"],\n        //   })\n        // );\n        ws.current.send(\n          JSON.stringify({\n            method: \"subscribe\",\n            id: \"price\",\n            data: { cryptoIds: [1], index: \"detail\" },\n          })\n        );\n        ws.current.onmessage = (e) => {\n          // const result = e.data.split(\"~\");\n          // if (result[0] === \"2\" && (result[4] === \"1\" || result[4] === \"2\"))\n          // if (result[0] === \"24\") {\n          //   setPrice((prev) => {\n          //     if (prev) {\n          //       prev < result[10] ? setDirection(\"up\") : setDirection(\"down\");\n          //     }\n          //     return {\n          //       time: result[4],\n          //       open: result[7],\n          //       high: result[8],\n          //       low: result[9],\n          //       close: result[10],\n          //     };\n          //   });\n          //   if (!ticker) {\n          //     setTicker(result[2] + \"/\" + result[3]);\n          //   }\n          //   document.title = result[2] + \"-\" + result[3] + \" | \" + result[10];\n          // }\n\n          const data = JSON.parse(e.data);\n          if (data) {\n            setPrice((prev) => {\n              if (prev) {\n                prev.close < data.d.cr.p\n                  ? setDirection(\"up\")\n                  : setDirection(\"down\");\n              }\n              return {\n                time: data.d.t,\n                close: data.d.cr.p,\n                pc24h: data.d.cr.p24h,\n              };\n            });\n            document.title = ticker + \" | \" + data.d.cr.p;\n          }\n        };\n      };\n    }\n\n    return () => {\n      ws.current.onclose = () => {\n        ws.current.send(\n          JSON.stringify({\n            action: \"SubRemove\",\n            subs: [\"24~CCCAGG~BTC~USD~m\"],\n          })\n        );\n      };\n    };\n  }, [ws]);\n\n  return (\n    <main className=\"container\" ref={containerRef}>\n      {price?.close && (\n        <div className=\"block\">\n          <h4 className=\"ticker\">\n            {ticker}\n            {price?.pc24h && (\n              <small\n                className={`badge\n                ${\n                  price.pc24h.toString().includes(\"-\")\n                    ? \"down\"\n                    : price.pc24h.toString().includes(\"+\")\n                    ? \"up\"\n                    : \"\"\n                }\n                `}\n              >\n                {Number(price.pc24h).toFixed(2)}%\n              </small>\n            )}\n          </h4>\n          <h2\n            className={`price ${\n              direction === \"up\" ? \"up\" : direction === \"down\" ? \"down\" : \"\"\n            }`}\n          >\n            {\"$ \" + Number(price.close).toFixed(2)}\n          </h2>\n        </div>\n      )}\n      <Chart\n        price={price}\n        height={containerRef?.current?.clientHeight || window.innerHeight}\n        width={containerRef?.current?.clientWidth || window.innerWidth}\n      />\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}